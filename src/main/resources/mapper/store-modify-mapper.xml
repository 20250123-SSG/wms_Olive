<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minisec.store.dao.StoreModifyMapper">

    <resultMap id="storeProductMap" type="StoreDetailProductDto">
        <id column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_brand_name" property="productBrandName"/>
        <result column="category_name" property="categoryName"/>
        <result column="product_price" property="productPrice"/>
        <result column="store_id" property="storeId"/>
        <result column="store_detail_id" property="storeDetailId"/>
        <result column="store_detail_price" property="storeDetailPrice"/>
        <result column="store_detail_quantity" property="storeDetailQuantity"/>
        <result column="is_discount" property="isDiscount"/>
    </resultMap>

    <!-- 상품 전체 목록 조회 -->
    <select id="productList" resultMap="storeProductMap">
        SELECT DISTINCT
            p.product_id
          , p.product_name
          , p.product_brand_name
          , c.category_name
          , p.product_price
        FROM
            product p
                LEFT JOIN store_detail s on p.product_id = s.product_id
                LEFT JOIN category c ON p.category_id = c.category_id
    </select>


    <!-- 가맹점 상품 등록 -->
    <insert id="insertStoreProduct" parameterType="map">
        INSERT INTO
            store_detail
            (
              store_id
            , product_id
            , store_detail_price
            , store_detail_quantity
            )
        VALUES
            (
              #{storeId}
            , #{productId}
            , #{storeDetailPrice}
            , 0
            )
    </insert>


    <!-- 상품 등록 후 확인 목록 -->
    <select id="selectStoreProductById" parameterType="map" resultMap="storeProductMap">
        SELECT
            p.product_id
          , p.product_name
          , p.product_brand_name
          , c.category_name
          , sd.store_detail_price
          , sd.store_detail_quantity
          , sd.is_discount
        FROM
            product p
                LEFT JOIN store_detail sd ON p.product_id = sd.product_id
                LEFT JOIN category c ON p.category_id = c.category_id
                LEFT JOIN store_user su ON sd.store_id = su.store_id
        WHERE
            p.product_id = #{productId}
            AND su.user_id = #{manageID}

    </select>

    <!-- 가맹점 상품 수정 -->
    <update id="updateStoreProduct" parameterType="map">
        UPDATE
            store_detail sd
                JOIN store_user su ON sd.store_id = su.store_id
        SET
            sd.store_detail_price = #{storeDetailPrice}
          , sd.is_discount = #{isDiscount}
          , sd.store_detail_status = #{storeDetailStatus}
        WHERE
            sd.product_id = #{productId}
            AND su.user_id = #{manageId}
    </update>

    <!-- 가맹점 상품 삭제 -->
    <delete id="deleteStoreProduct" parameterType="map">
        DELETE sd
        FROM
            store_detail sd
                JOIN store_user su ON sd.store_id = su.store_id
        WHERE
            sd.product_id = #{productId}
            AND su.user_id = #{manageId}

    </delete>
</mapper>